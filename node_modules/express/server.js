const express = require('express');
const fs = require('fs');
const path = require('path');
const axios = require('axios');
const app = express();
const PORT = process.env.PORT || 3000;

app.use(express.json());

// Function to update Markdown files
function updateMarkdownFiles(data) {
    data.forEach(item => {
        const filePath = path.join(__dirname, 'path/to/your/cms', `${item.slug}.md`);
        const content = `---\ntitle: ${item.title}\nslug: ${item.slug}\nupdated-on: ${new Date().toISOString()}\n---\n`;
        fs.writeFileSync(filePath, content);
    });
}

// Function to read file content and encode it to BASE64
function readFileAndEncodeToBase64(filePath) {
    // Read file content
    const fileContent = fs.readFileSync(filePath, 'utf8');
    // Encode content to BASE64
    return Buffer.from(fileContent).toString('base64');
}

// Function to commit changes to GitHub repository
async function commitChanges(encodedContent) {
    try {
        const response = await axios.post('https://api.github.com/repos/shiftroll/negeri-bestari/commits', {
            message: 'Update CMS files',
            content: encodedContent,
            // Other required parameters like branch, committer, etc.
        }, {
            headers: {
                Authorization: 'token SECRET_API_TOKEN',
                Accept: 'application/vnd.github.v3+json', // Example of Accept header
                'Content-Type': 'application/json', // Example of Content-Type header
                // Other required headers here
            }
        });
        console.log(response.data);
    } catch (error) {
        console.error(error);
    }
}

// Handling POST request to update CMS
app.post('/update-cms', async (req, res) => {
    try {
        const jsonData = req.body;
        updateMarkdownFiles(jsonData.data); // Assuming JSON data has a 'data' property containing an array of objects

        // Read file content and encode to BASE64
        const filePath = 'path/to/your/file.md'; // Update with the path to your file
        const encodedContent = readFileAndEncodeToBase64(filePath);

        await commitChanges(encodedContent); // Commit changes to GitHub repository
        res.status(200).send('CMS updated successfully');
    } catch (error) {
        console.error(error);
        res.status(500).send('Failed to update CMS');
    }
});

app.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`);
});
